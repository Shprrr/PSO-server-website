@using PSOServerWebsite.Repositories
@using PSOServerWebsite.Services
@inject ItemPMTRepository itemPMTRepository
@inject DropsLocationsService dropsLocationsService

<div id="modalInfo" class="modal fade">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <span>@GetItemType()</span><button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @if (itemInfo != null)
                {
                    <ItemName ItemIdentifier="@itemInfo.ItemModel.ItemIdentifier" class="modal-title h2" />
                    @if (itemInfo.ItemModel.ItemType == ItemType.Weapon)
                    {
                        <div class="container">
                            <div class="row">
                                <div class="col">Id</div>
                                <div class="col">@itemInfo.ItemModel.AsWeapon.ItemId.ToString("X6") (@(itemInfo.ItemModel.AsWeapon.ItemId))</div>
                            </div>
                            <div class="row">
                                <div class="col">Type</div>
                                <div class="col">@itemInfo.ItemModel.AsWeapon.Type</div>
                            </div>
                            <div class="row">
                                <div class="col">Skin Id</div>
                                <div class="col">@itemInfo.ItemModel.AsWeapon.Skin</div>
                            </div>
                            <div class="row">
                                <div class="col">Team Points</div>
                                <div class="col">@itemInfo.ItemModel.AsWeapon.TeamPoints</div>
                            </div>
                            <div class="row">
                                <div class="col">Class Can Use</div>
                                <div class="col"><ClassFlags Value="@itemInfo.WeaponModel.ClassFlags" /></div>
                            </div>
                            <div class="row">
                                <div class="col">ATP Required</div>
                                <div class="col">@itemInfo.WeaponModel.ATPRequired</div>
                            </div>
                            <div class="row">
                                <div class="col">MST Required</div>
                                <div class="col">@itemInfo.WeaponModel.MSTRequired</div>
                            </div>
                            <div class="row">
                                <div class="col">ATA Required</div>
                                <div class="col">@itemInfo.WeaponModel.ATARequired</div>
                            </div>
                            <div class="row">
                                <div class="col">+ATP</div>
                                <div class="col">@itemInfo.WeaponModel.ATPMin - @itemInfo.WeaponModel.ATPMax</div>
                            </div>
                            <div class="row">
                                <div class="col">+MST</div>
                                <div class="col">@itemInfo.WeaponModel.MST</div>
                            </div>
                            <div class="row">
                                <div class="col">+ATA</div>
                                <div class="col">@itemInfo.WeaponModel.ATA</div>
                            </div>
                            @foreach (var statBoost in GetStatBoosts())
                            {
                                <div class="row">
                                    <div class="col">@statBoost.Name</div>
                                    <div class="col">@statBoost.ValueToString()</div>
                                </div>
                            }
                            @foreach (var techBoost in GetTechBoosts())
                            {
                                <div class="row">
                                    <div class="col">@techBoost.Name</div>
                                    <div class="col">@techBoost.ValueToString()</div>
                                </div>
                            }
                            <div class="row">
                                <div class="col">Max Grind</div>
                                <div class="col">@itemInfo.WeaponModel.MaxGrind</div>
                            </div>
                            <div class="row">
                                <div class="col">Photon Id</div>
                                <div class="col">@itemInfo.WeaponModel.Photon</div>
                            </div>
                            <div class="row">
                                <div class="col">Special</div>
                                <div class="col">@itemInfo.ItemModel.AsWeapon.SpecialName</div>
                            </div>
                            <div class="row">
                                <div class="col">Projectile Id</div>
                                <div class="col">@itemInfo.WeaponModel.Projectile</div>
                            </div>
                            <div class="row">
                                <div class="col">Combo Type</div>
                                <div class="col">@itemInfo.WeaponModel.ComboType</div>
                            </div>
                        </div>
                    }
                    else if (itemInfo.ArmorModel != null)
                    {
                        <div class="container">
                            <div class="row">
                                <div class="col">Id</div>
                                <div class="col">@itemInfo.ArmorModel.Id.ToString("X6") (@(itemInfo.ArmorModel.Id))</div>
                            </div>
                            <div class="row">
                                <div class="col">Type</div>
                                <div class="col">@itemInfo.ArmorModel.Type</div>
                            </div>
                            <div class="row">
                                <div class="col">Skin Id</div>
                                <div class="col">@itemInfo.ArmorModel.Skin</div>
                            </div>
                            <div class="row">
                                <div class="col">Team Points</div>
                                <div class="col">@itemInfo.ArmorModel.TeamPoints</div>
                            </div>
                            <div class="row">
                                <div class="col">Class Can Use</div>
                                <div class="col"><ClassFlags Value="@itemInfo.ArmorModel.ClassFlags" /></div>
                            </div>
                            <div class="row">
                                <div class="col">Level Required</div>
                                <div class="col">@(itemInfo.ArmorModel.RequiredLevel + 1)</div>
                            </div>
                            <div class="row">
                                <div class="col">+DFP</div>
                                <div class="col">@itemInfo.ArmorModel.DFP - @(itemInfo.ArmorModel.DFP + itemInfo.ArmorModel.DFPRange)</div>
                            </div>
                            <div class="row">
                                <div class="col">+EVP</div>
                                <div class="col">@itemInfo.ArmorModel.EVP - @(itemInfo.ArmorModel.EVP + itemInfo.ArmorModel.EVPRange)</div>
                            </div>
                            <div class="row">
                                <div class="col">+EFR</div>
                                <div class="col">@itemInfo.ArmorModel.EFR</div>
                            </div>
                            <div class="row">
                                <div class="col">+ETH</div>
                                <div class="col">@itemInfo.ArmorModel.ETH</div>
                            </div>
                            <div class="row">
                                <div class="col">+EIC</div>
                                <div class="col">@itemInfo.ArmorModel.EIC</div>
                            </div>
                            <div class="row">
                                <div class="col">+EDK</div>
                                <div class="col">@itemInfo.ArmorModel.EDK</div>
                            </div>
                            <div class="row">
                                <div class="col">+ELT</div>
                                <div class="col">@itemInfo.ArmorModel.ELT</div>
                            </div>
                            @foreach (var statBoost in GetStatBoosts())
                            {
                                <div class="row">
                                    <div class="col">@statBoost.Name</div>
                                    <div class="col">@statBoost.ValueToString()</div>
                                </div>
                            }
                            @foreach (var techBoost in GetTechBoosts())
                            {
                                <div class="row">
                                    <div class="col">@techBoost.Name</div>
                                    <div class="col">@techBoost.ValueToString()</div>
                                </div>
                            }
                            <div class="row">
                                <div class="col">Block Particle</div>
                                <div class="col">@itemInfo.ArmorModel.BlockParticle</div>
                            </div>
                            <div class="row">
                                <div class="col">Block Effect</div>
                                <div class="col">@itemInfo.ArmorModel.BlockEffect</div>
                            </div>
                        </div>
                    }
                    else if (itemInfo.UnitModel != null)
                    {
                        <div class="container">
                            <div class="row">
                                <div class="col">Id</div>
                                <div class="col">@itemInfo.UnitModel.Id.ToString("X6") (@(itemInfo.UnitModel.Id))</div>
                            </div>
                            <div class="row">
                                <div class="col">Team Points</div>
                                <div class="col">@itemInfo.UnitModel.TeamPoints</div>
                            </div>
                            <div class="row">
                                <div class="col">Class Can Use</div>
                                <div class="col"><ClassFlags Value="@itemInfo.UnitModel.ClassFlags" /></div>
                            </div>
                            @foreach (var statBoost in GetStatBoosts())
                            {
                                <div class="row">
                                    <div class="col">@statBoost.Name</div>
                                    <div class="col">@statBoost.ValueToString()</div>
                                </div>
                            }
                            @if (itemInfo.UnitModel.CanHaveModifier)
                            {
                                <div class="row">
                                    <div class="col">Modifier Amount</div>
                                    <div class="col">@itemInfo.UnitModel.ModifierAmount</div>
                                </div>
                            }
                        </div>
                    }
                    else if (itemInfo.ToolModel != null)
                    {
                        <div class="container">
                            <div class="row">
                                <div class="col">Id</div>
                                <div class="col">@itemInfo.ToolModel.Id.ToString("X6") (@(itemInfo.ToolModel.Id))</div>
                            </div>
                            <div class="row">
                                <div class="col">Type</div>
                                <div class="col">@itemInfo.ToolModel.Type</div>
                            </div>
                            <div class="row">
                                <div class="col">Skin Id</div>
                                <div class="col">@itemInfo.ToolModel.Skin</div>
                            </div>
                            <div class="row">
                                <div class="col">Team Points</div>
                                <div class="col">@itemInfo.ToolModel.TeamPoints</div>
                            </div>
                            <div class="row">
                                <div class="col">Amount</div>
                                <div class="col">@itemInfo.ToolModel.Amount</div>
                            </div>
                            <div class="row">
                                <div class="col">Technique</div>
                                <div class="col">@itemInfo.ToolModel.Technique</div>
                            </div>
                            <div class="row">
                                <div class="col">Cost</div>
                                <div class="col">@itemInfo.ToolModel.Cost</div>
                            </div>
                            <div class="row">
                                <div class="col">Item Flag</div>
                                <div class="col">@itemInfo.ToolModel.ItemFlag</div>
                            </div>
                        </div>
                    }

                    <span class="modal-title h3">Where to find</span>
                    <table class="table table-striped table-hover table-sm">
                        <tbody>
                            @foreach (var location in GetItemLocations())
                            {
                                <tr>
                                    <td>@location.DifficultyName</td>
                                    <td class="text-nowrap">@location.EpisodeName</td>
                                    <td>
                                        @location.LocationName
                                        @if (location.Modifier != null)
                                        {
                                            <div class="ms-2 text-secondary">(@location.Modifier)</div>
                                        }
                                    </td>
                                    <td><SectionId Value="@location.SectionId" /></td>
                                    <td><Probability ProbabilityRatio="@location.Probability" /></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
            <div class="modal-footer">@itemInfo?.ItemModel.ItemIdentifier</div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Action? OnLoaded { get; set; } = null;

    private ItemInfoModel? itemInfo;
    [DisallowNull] private ItemPMTModel itemPMT = default!;
    [DisallowNull] private IEnumerable<DropLocationModel> dropsLocations = default!;

    public Dictionary<string, object> MoreInfoAttributes => new Dictionary<string, object> { { "data-bs-toggle", "modal" }, { "data-bs-target", "#modalInfo" }, { "href", "#modalInfo" } };

    protected override async Task OnInitializedAsync()
    {
        itemPMT = await itemPMTRepository.GetItemsAsync();

        dropsLocations = await dropsLocationsService.GetDropsLocationsAsync();

        OnLoaded?.Invoke();
    }

    private string? oldItemIdentifier;
    protected override bool ShouldRender()
    {
        bool shouldRender = oldItemIdentifier != itemInfo?.ItemModel.ItemIdentifier;
        oldItemIdentifier = itemInfo?.ItemModel.ItemIdentifier;
        return shouldRender;
    }

    public void ShowItemModal(ItemModel item)
    {
        if (HasMoreInfo(item))
        {
            itemPMT.Weapons.TryGetValue(item.ItemIdentifier, out var weaponModel);
            itemPMT.Armors.TryGetValue(item.ItemIdentifier, out var armorModel);
            itemPMT.Units.TryGetValue(item.ItemIdentifier, out var unitModel);
            itemPMT.Tools.TryGetValue(item.ItemIdentifier, out var toolModel);
            itemInfo = new ItemInfoModel(item, weaponModel, armorModel, unitModel, toolModel);
        }
        else
            itemInfo = null;
        if (oldItemIdentifier != itemInfo?.ItemModel.ItemIdentifier) StateHasChanged();
    }

    public bool HasMoreInfo([NotNullWhen(true)] ItemModel? item)
    {
        if (item == null) return false;
        return itemPMT.Weapons.ContainsKey(item.ItemIdentifier) || itemPMT.Armors.ContainsKey(item.ItemIdentifier) || itemPMT.Units.ContainsKey(item.ItemIdentifier) || itemPMT.Tools.ContainsKey(item.ItemIdentifier);
    }

    public string GetItemType() => itemInfo?.ItemModel.ItemType switch
    {
        ItemType.Weapon => "Weapon",
        ItemType.Armor => "Armor",
        ItemType.Shield => "Shield",
        ItemType.Unit => "Unit",
        ItemType.Mag => "Mag",
        ItemType.Tool => "Item",
        _ => ""
    };

    public IEnumerable<Stat> GetStatBoosts()
    {
        if (itemInfo?.WeaponModel != null)
            return itemInfo.WeaponModel.GetStatBoosts();

        if (itemInfo?.ArmorModel != null)
            return itemInfo.ArmorModel.GetStatBoosts();

        if (itemInfo?.UnitModel != null)
            return itemInfo.UnitModel.GetStatBoosts();

        return Enumerable.Empty<Stat>();
    }

    public IEnumerable<Tech> GetTechBoosts()
    {
        if (itemInfo?.WeaponModel != null)
            return itemInfo.WeaponModel.GetTechBoosts();

        if (itemInfo?.ArmorModel != null)
            return itemInfo.ArmorModel.GetTechBoosts();

        return Enumerable.Empty<Tech>();
    }

    private IEnumerable<DropLocationModel> GetItemLocations()
    {
        if (itemInfo?.ItemModel.ItemIdentifier == null) return [];

        return dropsLocations.Where(dl => dl.ItemIdentifier == itemInfo?.ItemModel.ItemIdentifier);
    }

    private record ItemInfoModel(ItemModel ItemModel, WeaponModel? WeaponModel, ArmorModel? ArmorModel, UnitModel? UnitModel, ToolModel? ToolModel);
}
